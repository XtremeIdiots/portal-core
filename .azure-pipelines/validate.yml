trigger:
  branches: 
    include:
    - '*'

variables:
  terraformWorkingDirectory: '$(Build.sourcesDirectory)/tf-deploy'
  backendServiceArm: 'arm-portal-core-dev'
  backendAzureRmResourceGroupName: 'rg-portal_tfstate-dev-eastus-01'
  backendAzureRmStorageAccountName: 'saportaltfdeveastus01'
  backendAzureRmContainerName: 'tfstate'
  backendAzureRmKey: 'portal-core-dev.tfstate'
  environmentServiceNameAzureRM: 'arm-portal-core-dev'
  varFile: './../tf-vars/dev.tfvars'
  buildConfiguration: 'Release'


resources:
  repositories:
    - repository: ado-pipeline-templates
      type: github
      name: XtremeIdiots/ado-pipeline-templates
      endpoint: XtremeIdiots

stages:
- stage: Validate

  jobs:
  - template: jobs/terraform-validate-and-plan.yml@ado-pipeline-templates
    parameters:
      workingDirectory: '$(terraformWorkingDirectory)'
      backendServiceArm: '$(backendServiceArm)'
      backendAzureRmResourceGroupName: '$(backendAzureRmResourceGroupName)'
      backendAzureRmStorageAccountName: '$(backendAzureRmStorageAccountName)'
      backendAzureRmContainerName: '$(backendAzureRmContainerName)'
      backendAzureRmKey: '$(backendAzureRmKey)'
      environmentServiceNameAzureRM: '$(environmentServiceNameAzureRM)'
      varFile: '$(varFile)'

  - job: BuildFunctionApp
    steps:
    - task: UseDotNet@2
      inputs:
        version: 6.0.x
        performMultiLevelLookup: true
        includePreviewVersions: true
    
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: '**/function-app.csproj'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/function-app.csproj'
        arguments: '--configuration $(buildConfiguration)'
      displayName: 'dotnet build $(buildConfiguration)'

    - task: ArchiveFiles@2
      displayName: "Package function-app to artifact staging directory"
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)/src/function-app/bin/Release/net6.0/'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/function-app.zip'
        replaceExistingArchive: true

    - publish: $(Build.artifactStagingDirectory)/function-app.zip
      displayName: Publish function-app artifact
      artifact: function-app

  - job: buildSql
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/database.csproj'
        arguments: '--configuration $(buildConfiguration)'
      displayName: 'dotnet build $(buildConfiguration)'