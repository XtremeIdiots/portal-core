trigger:
  branches:
    include:
    - 'sandbox/*'

pr: none

variables:
  environmentServiceNameAzureRM: 'arm-portal-core-sandbox'

pool: Dedicated

resources:
  repositories:
    - repository: ado-pipeline-templates
      type: github
      name: XtremeIdiots/ado-pipeline-templates
      endpoint: XtremeIdiots

stages:
- stage: Build

  jobs:
  - template: jobs/build-function-app.yml@ado-pipeline-templates
    parameters: 
      jobName: 'BuildEventsFunctionApp'
      projectName: 'events-func'
      publishArtifact: true

  - template: jobs/build-function-app.yml@ado-pipeline-templates
    parameters: 
      jobName: 'BuildIngestFunctionApp'
      projectName: 'ingest-func'
      publishArtifact: true

  - template: jobs/build-function-app.yml@ado-pipeline-templates
    parameters: 
      jobName: 'BuildRepositoryFunctionApp'
      projectName: 'repository-func'
      publishArtifact: true

  - template: jobs/build-function-app.yml@ado-pipeline-templates
    parameters: 
      jobName: 'BuildBanSyncFunctionApp'
      projectName: 'bansync-func'
      publishArtifact: true

  - template: jobs/build-web-app.yml@ado-pipeline-templates
    parameters: 
      jobName: 'BuildMgmtWebApp'
      projectName: 'mgmt-web'
      publishArtifact: true

  - template: jobs/build-web-app.yml@ado-pipeline-templates
    parameters: 
      jobName: 'BuildAdminWebApp'
      projectName: 'admin-web'
      publishArtifact: true

  - template: jobs/build-web-app.yml@ado-pipeline-templates
    parameters: 
      jobName: 'BuildPublicWebApp'
      projectName: 'public-web'
      publishArtifact: true

  - template: jobs/build-web-app.yml@ado-pipeline-templates
    parameters: 
      jobName: 'BuildRepositoryWebApi'
      projectName: 'repository-webapi'
      publishArtifact: true

  - template: jobs/build-sql-database.yml@ado-pipeline-templates
    parameters:
      publishArtifact: true

- stage: Deploy

  jobs:
  - template: jobs/deploy-function-app.yml@ado-pipeline-templates
    parameters:
      projectName: events-func
      jobName: DeployEventsFunctionApp
      dependsOn: TerraformPlanAndApply
      environmentServiceNameAzureRM: '$(environmentServiceNameAzureRM)'

  - template: jobs/deploy-function-app.yml@ado-pipeline-templates
    parameters:
      projectName: ingest-func
      jobName: DeployIngestFunctionApp
      dependsOn: TerraformPlanAndApply
      environmentServiceNameAzureRM: '$(environmentServiceNameAzureRM)'

  - template: jobs/deploy-function-app.yml@ado-pipeline-templates
    parameters:
      projectName: repository-func
      jobName: DeployRepositoryFunctionApp
      dependsOn: TerraformPlanAndApply
      environmentServiceNameAzureRM: '$(environmentServiceNameAzureRM)'

  - template: jobs/deploy-function-app.yml@ado-pipeline-templates
    parameters:
      projectName: bansync-func
      jobName: DeployBanSyncFunctionApp
      dependsOn: TerraformPlanAndApply
      environmentServiceNameAzureRM: '$(environmentServiceNameAzureRM)'

  - template: jobs/deploy-web-app.yml@ado-pipeline-templates
    parameters: 
      projectName: 'mgmt-web'
      jobName: 'DeployMgmtWebApp'
      dependsOn: TerraformPlanAndApply
      environmentServiceNameAzureRM: '$(environmentServiceNameAzureRM)'

  - template: jobs/deploy-web-app.yml@ado-pipeline-templates
    parameters: 
      projectName: 'admin-web'
      jobName: 'DeployAdminWebApp'
      dependsOn: TerraformPlanAndApply
      environmentServiceNameAzureRM: '$(environmentServiceNameAzureRM)'

  - template: jobs/deploy-web-app.yml@ado-pipeline-templates
    parameters: 
      projectName: 'public-web'
      jobName: 'DeployPublicWebApp'
      dependsOn: TerraformPlanAndApply
      environmentServiceNameAzureRM: '$(environmentServiceNameAzureRM)'

  - template: jobs/deploy-web-app.yml@ado-pipeline-templates
    parameters: 
      projectName: 'repository-webapi'
      jobName: 'DeployRepositoryWebApi'
      dependsOn: TerraformPlanAndApply
      environmentServiceNameAzureRM: '$(environmentServiceNameAzureRM)'

  - template: jobs/deploy-sql-database.yml@ado-pipeline-templates
    parameters:
      jobName: DeploySqlDatabase
      dependsOn: TerraformPlanAndApply
      environmentServiceNameAzureRM: '$(environmentServiceNameAzureRM)'
